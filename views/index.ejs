<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Faculty Daily Reporter</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-50 min-h-screen flex items-center justify-center p-6">
    <div class="w-full max-w-2xl bg-white rounded-2xl shadow p-8">
        <h1 class="text-2xl font-bold mb-4">Faculty Daily Reporter</h1>

        <% if (locals.error) { %>
            <div class="mb-4 p-3 rounded bg-red-100 text-red-800">
                <%= error %>
            </div>
            <% } %>

                <% if (locals.success) { %>
                    <div class="mb-4 p-3 rounded bg-green-100 text-green-800">
                        <%= success %>
                    </div>
                    <% } %>

                        <div id="alert" class="hidden mb-4 p-3 rounded"></div>

                        <form id="reportForm" class="space-y-4" method="POST" action="/submit">
                            <div class="grid grid-cols-2 gap-4">
                                <input id="uid" name="uid" class="border p-2 rounded" placeholder="UID" required />
                                <input id="name" name="name" class="border p-2 rounded" placeholder="Full name"
                                    required />
                            </div>

                            <div class="grid grid-cols-1 gap-4">
                                <input id="report_date" name="report_date" type="date" class="border p-2 rounded"
                                    required value="<%= new Date().toISOString().split('T')[0] %>" readonly />
                                <input type="hidden" id="team" name="team" value="Multiple Teams">
                            </div>

                            <div>
                                <label class="block font-medium mb-2">Select Activities from Teams</label>

                                <div class="mb-4">
                                    <div class="flex flex-wrap items-center gap-2 mb-2">
                                        <button type="button" id="showSecrecy" data-active="false"
                                            class="px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded transition-colors">Secrecy
                                            Cell</button>
                                        <button type="button" id="showGeneration" data-active="false"
                                            class="px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded transition-colors">Generation
                                            &
                                            Vetting</button>
                                        <button type="button" id="showTranslation" data-active="false"
                                            class="px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded transition-colors">Translation</button>
                                        <button type="button" id="showEditing" data-active="false"
                                            class="px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded transition-colors">Editing</button>
                                    </div>
                                    <p class="text-sm text-gray-600">Click buttons to show/hide activities from
                                        different teams</p>
                                </div>

                                <div id="activitiesContainer" class="space-y-4 border p-4 rounded">
                                    <div id="secrecyActivities" class="hidden">
                                        <% const secrecyActivities=[ "Handling Queries from DSR and Front Office"
                                            , "Resolving of student Queries" , "Scrutiny" , "Calling and Follow up"
                                            , "Re-evaluation" , "Rectification/Proration of Marks" , "Academic Benefit"
                                            , "Confidential Result Declaration" , "Question Bank"
                                            , "Data Entry of marks" , "Duty leave" , "Staff Indisciplinary"
                                            , "Coordination in External Re-evaluation"
                                            , "Coordination in External Question Paper"
                                            , "Reports/Record maintenance/Data Analysis" , "Email Handling"
                                            , "Digitalization of Record" , "Co-ordination" ]; %>
                                            <% secrecyActivities.forEach(activity=> { %>
                                                <div class="flex items-center">
                                                    <input type="checkbox" name="activities[]" value="<%= activity %>"
                                                        id="<%= activity.replace(/\s+/g, '_') %>" class="mr-2">
                                                    <label for="<%= activity.replace(/\s+/g, '_') %>">
                                                        <%= activity %>
                                                    </label>
                                                </div>
                                                <% }); %>
                                    </div>

                                    <div id="generationActivities" class="hidden">
                                        <% const generationActivities=[ "Generation of Question Paper"
                                            , "Email handling"
                                            , "Resolving of faculty Queries/ Calling(telephonic and visitors)"
                                            , "RMS Handling" , "Vetting-faculty dealing" , "Vetting - Calling"
                                            , "Envelope preparation(For vetting )"
                                            , "Sorting and pending status updation" , "Reports / Record maintenance"
                                            , "Closer report" , "Final Question paper verification"
                                            , "Final Question paper uploading for Evalution/DE" ]; %>
                                            <% generationActivities.forEach(activity=> { %>
                                                <div class="flex items-center">
                                                    <input type="checkbox" name="activities[]" value="<%= activity %>"
                                                        id="<%= activity.replace(/\s+/g, '_') %>" class="mr-2">
                                                    <label for="<%= activity.replace(/\s+/g, '_') %>">
                                                        <%= activity %>
                                                    </label>
                                                </div>
                                                <% }); %>
                                    </div>

                                    <div id="translationActivities" class="hidden">
                                        <% const translationActivities=[ "Translation" , "Printing / downloading"
                                            , "answer key sorting /set making/ stapling / pasting of stickers / seating plan etc"
                                            , "Stamping of brown envelopes" , "Packing"
                                            , "Verification & sorting of pakets / answer key" , "Answer key -(Manual)"
                                            , "Answer key - (Online )" , "Reports/Record maintenance"
                                            , "Shredding of confidential documents" , "Dispatch QP/OMR" ]; %>
                                            <% translationActivities.forEach(activity=> { %>
                                                <div class="flex items-center">
                                                    <input type="checkbox" name="activities[]" value="<%= activity %>"
                                                        id="<%= activity.replace(/\s+/g, '_') %>" class="mr-2">
                                                    <label for="<%= activity.replace(/\s+/g, '_') %>">
                                                        <%= activity %>
                                                    </label>
                                                </div>
                                                <% }); %>
                                    </div>

                                    <div id="editingActivities" class="hidden">
                                        <% const editingActivities=[ "Editing" , "Question bank entry on MyClass"
                                            , "Proof reading" , "Final question paper uploading for Evaulation/DE"
                                            , "Reports/Record maintenance" , "Segregation of QP" ]; %>
                                            <% editingActivities.forEach(activity=> { %>
                                                <div class="flex items-center">
                                                    <input type="checkbox" name="activities[]" value="<%= activity %>"
                                                        id="<%= activity.replace(/\s+/g, '_') %>" class="mr-2">
                                                    <label for="<%= activity.replace(/\s+/g, '_') %>">
                                                        <%= activity %>
                                                    </label>
                                                </div>
                                                <% }); %>
                                    </div>
                                </div>

                                <div id="countInputs" class="mt-4 space-y-2 hidden">
                                    <h3 class="font-medium">Enter count/hours for selected activities:</h3>
                                    <div id="countInputsContainer"></div>
                                </div>
                            </div>

                            <div class="flex items-center gap-3">
                                <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded">Submit
                                    Report</button>
                            </div>
                        </form>
    </div>

    <script>
        const alertBox = document.getElementById('alert');

        function showAlert(msg, type = 'info') {
            alertBox.classList.remove('hidden');
            alertBox.textContent = msg;
            alertBox.className = '';
            alertBox.classList.add('mb-4', 'p-3', 'rounded');
            if (type === 'error') alertBox.classList.add('bg-red-100', 'text-red-800');
            else alertBox.classList.add('bg-green-100', 'text-green-800');
            setTimeout(() => alertBox.classList.add('hidden'), 5000);
        }

        // Toggle activity sections
        document.getElementById('showSecrecy').addEventListener('click', function () {
            toggleSection('secrecyActivities', this);
        });

        document.getElementById('showGeneration').addEventListener('click', function () {
            toggleSection('generationActivities', this);
        });

        document.getElementById('showTranslation').addEventListener('click', function () {
            toggleSection('translationActivities', this);
        });

        document.getElementById('showEditing').addEventListener('click', function () {
            toggleSection('editingActivities', this);
        });

        function toggleSection(sectionId, button) {
            const section = document.getElementById(sectionId);
            const isActive = button.getAttribute('data-active') === 'true';

            if (isActive) {
                // If already active, deactivate
                button.setAttribute('data-active', 'false');
                button.classList.remove('bg-blue-500', 'text-white');
                button.classList.add('bg-blue-100');
                section.classList.add('hidden');
            } else {
                // If not active, activate
                button.setAttribute('data-active', 'true');
                button.classList.remove('bg-blue-100');
                button.classList.add('bg-blue-500', 'text-white');
                section.classList.remove('hidden');
            }
        }

        // Update count inputs whenever checkboxes change
        document.addEventListener('change', function (e) {
            if (e.target.type === 'checkbox' && e.target.name === 'activities[]') {
                updateCountInputs();
            }
        });

        function updateCountInputs() {
            const countInputsContainer = document.getElementById('countInputsContainer');
            const countInputsSection = document.getElementById('countInputs');
            countInputsContainer.innerHTML = '';

            const checkedActivities = document.querySelectorAll('input[name="activities[]"]:checked');

            if (checkedActivities.length > 0) {
                countInputsSection.classList.remove('hidden');

                checkedActivities.forEach(checkbox => {
                    const activityName = checkbox.value;
                    const inputId = `count_${checkbox.id}`;

                    const div = document.createElement('div');
                    div.className = 'flex items-center gap-2';
                    div.innerHTML = `
                        <label class="w-3/4">${activityName}:</label>
                        <input type="text" name="counts[${activityName}]" id="${inputId}" 
                            class="border p-2 rounded w-1/4" placeholder="Count/Hours" required>
                    `;

                    countInputsContainer.appendChild(div);
                });
            } else {
                countInputsSection.classList.add('hidden');
            }
        }

        // Initialize form with today's date
        document.getElementById('reportForm').addEventListener('submit', function (e) {
            const checkedActivities = document.querySelectorAll('input[name="activities[]"]:checked');
            if (checkedActivities.length === 0) {
                e.preventDefault();
                showAlert('Please select at least one activity', 'error');
                return;
            }

            // Set the team value based on which sections are active
            const teams = [];
            if (document.getElementById('showSecrecy').getAttribute('data-active') === 'true') {
                teams.push('Secrecy Cell');
            }
            if (document.getElementById('showGeneration').getAttribute('data-active') === 'true') {
                teams.push('Generation & Vetting');
            }
            if (document.getElementById('showTranslation').getAttribute('data-active') === 'true') {
                teams.push('Translation, Printing & Packing');
            }
            if (document.getElementById('showEditing').getAttribute('data-active') === 'true') {
                teams.push('Editing & Final Checking');
            }

            if (teams.length === 0) {
                e.preventDefault();
                showAlert('Please select at least one team', 'error');
                return;
            }

            document.getElementById('team').value = teams.join(', ');
        });

        // Hide all activity sections initially
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('secrecyActivities').classList.add('hidden');
            document.getElementById('generationActivities').classList.add('hidden');
            document.getElementById('translationActivities').classList.add('hidden');
            document.getElementById('editingActivities').classList.add('hidden');
        });
    </script>
</body>

</html>