<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Faculty Daily Reporter</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen flex items-center justify-center p-6">
    <div class="w-full max-w-2xl bg-white rounded-2xl shadow-lg overflow-hidden">
        <div class="bg-indigo-600 p-6 text-white">
            <h1 class="text-2xl font-bold">Faculty Daily Reporter</h1>
            <p class="text-indigo-200 mt-1">Record your daily activities</p>
        </div>

        <div class="p-8">
            <% if (locals.error) { %>
                <div class="mb-6 p-4 rounded bg-red-100 text-red-800 border-l-4 border-red-600">
                    <div class="flex items-center">
                        <i class="fas fa-exclamation-circle mr-2"></i>
                        <span>
                            <%= error %>
                        </span>
                    </div>
                </div>
                <% } %>

                    <% if (locals.success) { %>
                        <div class="mb-6 p-4 rounded bg-green-100 text-green-800 border-l-4 border-green-600">
                            <div class="flex items-center">
                                <i class="fas fa-check-circle mr-2"></i>
                                <span>
                                    <%= success %>
                                </span>
                            </div>
                        </div>
                        <% } %>

                            <div id="alert" class="hidden mb-6 p-4 rounded border-l-4"></div>

                            <form id="reportForm" class="space-y-6" method="POST" action="/submit">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label for="uid" class="block text-sm font-medium text-gray-700 mb-1">Faculty
                                            ID</label>
                                        <div class="relative">
                                            <div
                                                class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <i class="fas fa-id-card text-gray-400"></i>
                                            </div>
                                            <input id="uid" name="uid" type="text"
                                                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-10 p-3"
                                                placeholder="Enter your faculty ID" required />
                                        </div>
                                    </div>

                                    <div>
                                        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Full
                                            Name</label>
                                        <div class="relative">
                                            <div
                                                class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                                <i class="fas fa-user text-gray-400"></i>
                                            </div>
                                            <input id="name" name="name"
                                                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-10 p-3"
                                                placeholder="Enter your full name" required />
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <label for="report_date" class="block text-sm font-medium text-gray-700 mb-1">Report
                                        Date</label>
                                    <div class="relative">
                                        <div
                                            class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                            <i class="fas fa-calendar text-gray-400"></i>
                                        </div>
                                        <input id="report_date" name="report_date" type="date"
                                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-10 p-3"
                                            required value="<%= new Date().toISOString().split('T')[0] %>" readonly />
                                        <div
                                            class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                                            <i class="fas fa-lock text-gray-400"></i>
                                        </div>
                                    </div>
                                    <p class="mt-1 text-sm text-gray-500">Today's date is set automatically</p>
                                    <input type="hidden" id="team" name="team" value="Multiple Teams">
                                </div>

                                <div class="mt-6">
                                    <label class="block text-sm font-medium text-gray-700 mb-3">Select Your
                                        Teams</label>

                                    <div class="mb-4">
                                        <div class="flex flex-wrap items-center gap-2 mb-3">
                                            <% Object.keys(teamsConfig.teams).forEach((teamKey, index)=> {
                                                const team = teamsConfig.teams[teamKey];
                                                const teamId = teamKey.replace(/\s+/g, '').replace('&', '');
                                                %>
                                                <button type="button" id="show<%= teamId %>" data-active="false"
                                                    data-team="<%= teamKey %>"
                                                    class="flex items-center px-2 py-1 sm:px-4 sm:py-2 text-xs sm:text-sm bg-blue-100 hover:bg-blue-200 text-blue-800 rounded-full transition-all duration-200 cursor-pointer shadow-sm hover:shadow-md">
                                                    <i class="<%= team.icon %> mr-1 sm:mr-2"></i>
                                                    <%= team.displayName %>
                                                </button>
                                                <% }) %>
                                        </div>
                                        <p class="text-sm text-gray-600"><i class="fas fa-info-circle mr-1"></i>
                                            <strong>Click the team buttons above</strong> to show activities from
                                            different teams. You can select multiple teams.
                                        </p>
                                    </div>

                                    <div id="activitiesContainer"
                                        class="space-y-4 border border-gray-200 p-3 sm:p-5 rounded-lg bg-gray-50">
                                        <h3 class="font-medium text-indigo-700 border-b pb-2 mb-3">Select Your
                                            Activities</h3>

                                        <div id="noActivitiesMessage" class="text-center py-8 text-gray-500">
                                            <i class="fas fa-arrow-up text-2xl mb-2"></i>
                                            <p class="text-sm"><strong>Click on the team buttons above</strong> to see
                                                available activities.</p>
                                            <p class="text-xs mt-1">You can select activities from multiple teams.</p>
                                        </div>

                                        <% Object.keys(teamsConfig.teams).forEach((teamKey)=> {
                                            const team = teamsConfig.teams[teamKey];
                                            const teamId = teamKey.replace(/\s+/g, '').replace('&', '');
                                            const sectionId = teamId.toLowerCase() + 'Activities';
                                            %>
                                            <div id="<%= sectionId %>" class="hidden">
                                                <div class="mb-2 text-sm font-medium text-indigo-600">
                                                    <i class="<%= team.icon %> mr-1"></i>
                                                    <%= team.displayName %> Activities
                                                </div>
                                                <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
                                                    <% team.activities.forEach(activity=> { %>
                                                        <div
                                                            class="flex items-center space-x-2 p-2 hover:bg-indigo-50 rounded">
                                                            <input type="checkbox" name="activities[]"
                                                                value="<%= activity %>"
                                                                id="<%= activity.replace(/\s+/g, '_').replace(/[^\w]/g, '_') %>"
                                                                class="w-4 h-4 text-indigo-600 rounded focus:ring-indigo-500">
                                                            <label
                                                                for="<%= activity.replace(/\s+/g, '_').replace(/[^\w]/g, '_') %>"
                                                                class="ml-2 text-sm text-gray-700">
                                                                <%= activity %>
                                                            </label>
                                                        </div>
                                                        <% }); %>
                                                </div>
                                            </div>
                                            <% }) %>
                                    </div>

                                    <div id="countInputs" class="mt-4 sm:mt-6 hidden">
                                        <div class="bg-indigo-50 border border-indigo-100 rounded-lg p-3 sm:p-4">
                                            <h3 class="text-xs sm:text-sm font-medium text-indigo-800 mb-2 sm:mb-3">
                                                <i class="fas fa-clipboard-list mr-1"></i> Enter count/hours for
                                                selected activities:
                                            </h3>
                                            <div id="countInputsContainer" class="space-y-2 sm:space-y-3"></div>
                                        </div>
                                    </div>
                                </div>

                                <div
                                    class="flex flex-col sm:flex-row justify-between items-center mt-8 pt-6 border-t border-gray-200">
                                    <a href="/admin/login"
                                        class="text-sm text-indigo-600 hover:text-indigo-800 mb-4 sm:mb-0 flex items-center">
                                        <i class="fas fa-lock mr-1"></i> Admin Login
                                    </a>

                                    <button type="submit"
                                        class="px-4 py-2 sm:px-6 sm:py-3 bg-indigo-600 hover:bg-indigo-700 text-white text-sm sm:text-base font-medium rounded-lg transition flex items-center">
                                        <i class="fas fa-paper-plane mr-2"></i> Submit Report
                                    </button>
                                </div>
                            </form>
        </div>

        <div class="bg-gray-50 p-4 text-center text-sm text-gray-600 border-t">
            <p>Faculty Daily Reporter &copy; <%= new Date().getFullYear() %> | Last updated: August 18, 2025</p>
        </div>
    </div>

    <script>
        const alertBox = document.getElementById('alert');

        function showAlert(msg, type = 'info') {
            alertBox.classList.remove('hidden');
            alertBox.textContent = msg;
            alertBox.className = 'mb-6 p-4 rounded border-l-4';

            if (type === 'error') {
                alertBox.classList.add('bg-red-100', 'text-red-800', 'border-red-600');
                alertBox.innerHTML = '<div class="flex items-center"><i class="fas fa-exclamation-circle mr-2"></i>' + msg + '</div>';
            } else {
                alertBox.classList.add('bg-green-100', 'text-green-800', 'border-green-600');
                alertBox.innerHTML = '<div class="flex items-center"><i class="fas fa-check-circle mr-2"></i>' + msg + '</div>';
            }

            setTimeout(() => alertBox.classList.add('hidden'), 5000);
        }

        // Toggle activity sections - Dynamic setup
        function setupTeamButtons() {
            const buttons = document.querySelectorAll('[data-team]');
            buttons.forEach(button => {
                button.addEventListener('click', function () {
                    const teamName = this.getAttribute('data-team');
                    const teamId = teamName.replace(/\s+/g, '').replace('&', '');
                    const sectionId = teamId.toLowerCase() + 'Activities';
                    toggleSection(sectionId, this);
                });
            });
        }

        function toggleSection(sectionId, button) {
            const section = document.getElementById(sectionId);
            const isActive = button.getAttribute('data-active') === 'true';
            const noActivitiesMessage = document.getElementById('noActivitiesMessage');

            if (isActive) {
                // If already active, deactivate
                button.setAttribute('data-active', 'false');
                button.classList.remove('bg-indigo-600', 'text-white');
                button.classList.add('bg-blue-100', 'text-blue-800');
                section.classList.add('hidden');
            } else {
                // If not active, activate
                button.setAttribute('data-active', 'true');
                button.classList.remove('bg-blue-100', 'text-blue-800');
                button.classList.add('bg-indigo-600', 'text-white');
                section.classList.remove('hidden');
            }

            // Check if any activities are visible
            const visibleSections = document.querySelectorAll('[id$="Activities"]:not(.hidden)');
            if (visibleSections.length > 0) {
                noActivitiesMessage.classList.add('hidden');
            } else {
                noActivitiesMessage.classList.remove('hidden');
            }
        }

        // Initialize team buttons on page load
        setupTeamButtons();

        // Update count inputs whenever checkboxes change
        document.addEventListener('change', function (e) {
            if (e.target.type === 'checkbox' && e.target.name === 'activities[]') {
                updateCountInputs();
            }
        });

        function updateCountInputs() {
            const countInputsContainer = document.getElementById('countInputsContainer');
            const countInputsSection = document.getElementById('countInputs');
            countInputsContainer.innerHTML = '';

            const checkedActivities = document.querySelectorAll('input[name="activities[]"]:checked');

            if (checkedActivities.length > 0) {
                countInputsSection.classList.remove('hidden');

                checkedActivities.forEach(checkbox => {
                    const activityName = checkbox.value;
                    const inputId = `count_${checkbox.id}`;

                    const div = document.createElement('div');
                    div.className = 'mb-3';
                    div.innerHTML = `
                        <div class="flex items-start gap-3">
                            <div class="flex-1 min-w-0 pt-2">
                                <label class="text-sm font-medium text-gray-700 break-words">${activityName}:</label>
                            </div>
                            <div class="flex-shrink-0 w-32">
                                <input type="text" name="counts[${activityName}]" id="${inputId}" 
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-3" 
                                    placeholder="Count/Hours" required>
                            </div>
                        </div>
                    `;

                    countInputsContainer.appendChild(div);
                });
            } else {
                countInputsSection.classList.add('hidden');
            }
        }

        // Initialize form with today's date
        document.getElementById('reportForm').addEventListener('submit', function (e) {
            const checkedActivities = document.querySelectorAll('input[name="activities[]"]:checked');
            if (checkedActivities.length === 0) {
                e.preventDefault();
                showAlert('Please select at least one activity', 'error');
                return;
            }

            // Validate UID is a number
            const uid = document.getElementById('uid').value.trim();
            if (!/^\d+$/.test(uid)) {
                e.preventDefault();
                showAlert('Faculty ID must be a number', 'error');
                return;
            }

            // Set the team value based on which sections are active
            const teams = [];
            const activeButtons = document.querySelectorAll('[data-team][data-active="true"]');
            activeButtons.forEach(button => {
                teams.push(button.getAttribute('data-team'));
            });

            if (teams.length === 0) {
                e.preventDefault();
                showAlert('Please select at least one team', 'error');
                return;
            }

            document.getElementById('team').value = teams.join(', ');
        });

        // Initialize the page state
        document.addEventListener('DOMContentLoaded', function () {
            const activitySections = document.querySelectorAll('[id$="Activities"]');
            const noActivitiesMessage = document.getElementById('noActivitiesMessage');

            // Hide all activity sections initially
            activitySections.forEach(section => {
                section.classList.add('hidden');
            });

            // Show the "no activities" message since no sections are visible
            noActivitiesMessage.classList.remove('hidden');
        });
    </script>
</body>

</html>